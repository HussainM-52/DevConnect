<%- include("partials/header.ejs") %>

<main class="main create-profile-main">
  <div class="container">
  <form id="imageUploadForm" enctype="multipart/form-data">
    <label class="profileImageInputLabel" for="profileImageInput">
      <i class="bi bi-camera"></i>
    </label>
    <input type="file" name="profileImage" id="profileImageInput" autocomplete="off" required />
</form>
<div class="img-cont">
<img id="imagePreview" src='../assets/default.png' />
</div>
<form class="create-profile-form" action="/create-profile" method="POST">
  <div class="cont">
  <label for="name">Full name</label>
  <input class="formInput" type="text" name="name" id="name" required autocomplete="off"/>
  </div>
  <div class="cont">
  <label for="usernameInput">Username</label>
  <input class="formInput" type="text" id="usernameInput" name="username" autocomplete="off" required />
  </div>
  <div class="cont">
  <label for="bio">About you</label>
  <textarea class="auto-resize" name="bio" id="bio" autocomplete="off"></textarea>
</div>
<input type="hidden" name="imagePath" id="imagePathInput" value="/assets/default.png" autocomplete="off" />
  <!-- <div class="links-cont">
    <div class="link">
      <div class="insta active"><i class="bi bi-instagram"></i></div>
      <input type="text" placeholder="Enter your Instagram link" id="insta_link">
    </div>
    <div class="link">
      <div class="linkedin"><i class="bi bi-linkedin"></i></div>
      <input id="linkedin_link" type="text" placeholder="Enter your Linkedin link">
    </div>
    <div class="link">
      <div class="github"><i class="bi bi-github"></i></div>
      <input type="text" id="github_link" placeholder="Enter your GitHub link">
    </div>
    <div class="link">
      <div class="portfolio"><i class="bi bi-laptop"></i></div>
      <input type="text" placeholder="Enter your portfolio link" id="portfolio_link">
    </div>
  </div> -->
  <div class="btn-cont">
  <button type="submit">
    Create Profile
  </button>
  </div>
</form>
</div>

<script>
  const textarea = document.querySelector(".auto-resize");

textarea.addEventListener("input", () => {
  textarea.style.height = "auto";
  textarea.style.height = textarea.scrollHeight + "px"; 
});

  document.getElementById('usernameInput').addEventListener('input', function() {
    this.value = this.value.replace(/\s/g, '');
  });
  const input = document.getElementById('profileImageInput');

  input.addEventListener('change', async () => {
    const formData = new FormData();
    const file = input.files[0];
    if (!file) return;

    formData.append('profileImage', file);

    const response = await fetch('/upload-image', {
      method: 'POST',
      body: formData,
    });

    const data = await response.json();
    if (data.success) {
      const imagePreview = document.getElementById('imagePreview');
      imagePreview.src = data.imagePath;
      imagePreview.style.display = 'block';
      document.getElementById('imagePathInput').value = data.imagePath;
    } else {
      alert("Image upload failed");
    }
  });
  const someInputs = document.querySelectorAll(".formInput");
  const inputs = [...someInputs, textarea]
  console.log(inputs);

  inputs.forEach(input => {
    input.addEventListener("focusin", () => {
    input.style.border = '1px solid #2563EB';

    const label = document.querySelector(`label[for="${input.id}"]`);
    if (label) {
      label.style.transform = 'translate(7px, -10px)';
      label.style.display = 'block';
      label.style.color = '#1E3A8A';
      label.style.fontSize = '13px';
      label.style.backgroundColor = 'whitesmoke';
    }
  });

  input.addEventListener("focusout", () => {
    input.style.border = '1px solid rgb(58, 58, 58)';

    const label = document.querySelector(`label[for="${input.id}"]`);
    if (label) {
      label.style.transform = 'translate(7px, 3px)';
      label.style.color = 'rgb(124, 124, 124)';
      if (input.value) {
        label.style.display = 'none';
      } else {
        label.style.display = 'block';
      }
      label.style.fontSize = '15px';
      label.style.backgroundColor = 'whitesmoke';
    }
  });
});
</script>
<script>
  const instaIcon = document.querySelector(".insta");
const linkedinIcon = document.querySelector(".linkedin");
const githubIcon = document.querySelector(".github");
const portfolioIcon = document.querySelector(".portfolio");
const instaInput = document.querySelector("#insta_link");
const linkedinInput = document.querySelector("#linkedin_link");
const githubInput = document.querySelector("#github_link");
const portfolioInput = document.querySelector("#portfolio_link");
const allIcons = [instaIcon, linkedinIcon, githubIcon, portfolioIcon];
const allInputs = [instaInput, linkedinInput, githubInput, portfolioInput];

const updateInputs = () => {
  allInputs.forEach(input => input.style.display = "none");

  if (instaIcon.classList.contains("active")) instaInput.style.display = "block";
  else if (linkedinIcon.classList.contains("active")) linkedinInput.style.display = "block";
  else if (githubIcon.classList.contains("active")) githubInput.style.display = "block";
  else if (portfolioIcon.classList.contains("active")) portfolioInput.style.display = "block";
};
updateInputs();

allIcons.forEach((icon, idx) => {
  icon.addEventListener("click", () => {
    allIcons.forEach(i => i.classList.remove("active"));
    allInputs.forEach(input => input.style.display = "none");

    icon.classList.add("active");
    allInputs[idx].style.display = "block";
  });
});
</script>
</main>

<%- include("partials/footer.ejs") %>